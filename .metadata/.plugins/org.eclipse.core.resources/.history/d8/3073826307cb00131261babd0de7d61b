package com.thinkjs.io;

public class MaxPriorityQueue<key extends Comparable<key>> {

	private key[] pq;
	private int n = 0;
	
	private boolean less(int i, int j){
		return pq[i].compareTo(pq[j])<0;
	}
	
	private void exch(int i, int j){
		key t = pq[i];
		pq[i] = pq[j];
		pq[j] = t;
	}
	
	private void swim(int k){
		while(k<=n && less(k/2,k)){
			exch(k/2, k);
			k/=2;
		}
	}
	
	private void sink(int k){
		while(2*k<=n){
			int j = 2*k;
			if(j<n && less(j,j+1)) j++;
			if(!less(k,j)) break;
			exch(k,j);
			k=j;
		}
	}
	
	
	
	public static void main(String[] args) {
	

	}

}
